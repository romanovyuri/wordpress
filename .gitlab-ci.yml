---
# GitLab CI/CD pipeline with building docker images
# Use docker-in-docker service for testing
# Use docker-compose.yml for deploy

stages:
   - deploy

variables:
    DOCKER_TLS_CERTDIR: ""

deploy:
  image: alpine:latest
  stage: deploy
  tags:
    - deployment
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "rm -rf /opt/$CI_PROJECT_NAME/src"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "git clone --single-branch -b main $CI_REPOSITORY_URL /opt/$CI_PROJECT_NAME/src"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker stop $CI_PROJECT_NAME || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker rmi $CI_PROJECT_NAME:old || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker tag $CI_PROJECT_NAME $CI_PROJECT_NAME:old || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker rm $CI_PROJECT_NAME || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker-compose -f /opt/$CI_PROJECT_NAME/src/docker-compose.yml up -d --build --force-recreate"
  environment:
    name: production
  rules:
    - if: $CI_COMMIT_TAG != null
